/************************************************************************************

  Simple build to check all is OK
  This job do  : clean install javadoc:javadoc
  
*************************************************************************************/
pipeline {
  agent any
  tools {
    maven 'apache-maven-latest'
    jdk 'temurin-jdk17-latest'
  }
  options {
    timeout (time: 30, unit: 'MINUTES')
    buildDiscarder(logRotator(numToKeepStr: '3'))
    disableConcurrentBuilds()
    durabilityHint('PERFORMANCE_OPTIMIZED')
  }
  stages {
    stage('Build') {
      steps {
        // Build 
        sh ''' mvn -B com.github.ekryd.sortpom:sortpom-maven-plugin:verify -PallPom ''' 
        // This ssh agent is needed to cache npm/node to download.eclipse.org when using -PeclipseJenkins
        // see : https://github.com/eclipse-leshan/leshan/pull/1484
        sshagent ( ['projects-storage.eclipse.org-bot-ssh']) {
          sh ''' mvn -B clean install javadoc:javadoc -PeclipseJenkins '''
        }
        // Copy artifacts
        sh ''' cp leshan-demo-server/target/leshan-demo-server-*-jar-with-dependencies.jar leshan-demo-server.jar
               cp leshan-demo-bsserver/target/leshan-demo-bsserver-*-jar-with-dependencies.jar leshan-demo-bsserver.jar
               cp leshan-demo-client/target/leshan-demo-client-*-jar-with-dependencies.jar leshan-demo-client.jar
        '''
      }
    }
  }
  post {
    unsuccessful {
      mail to: 'code@simonbernard.eu',
           subject: "Build ${env.BUILD_TAG} failed!",
           body: "Check console output at ${env.BUILD_URL} to view the results."
    }
    fixed {
      mail to: 'code@simonbernard.eu',
           subject: "Build ${env.BUILD_TAG} back to normal.",
           body: "Check console output at ${env.BUILD_URL} to view the results."
    }
    always {
      junit '**/target/surefire-reports/*.xml'
      archiveArtifacts artifacts: 'leshan-demo-server.jar,leshan-demo-bsserver.jar,leshan-demo-client.jar'
    }
  }
}
